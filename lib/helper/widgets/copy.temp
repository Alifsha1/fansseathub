import 'dart:io';
import 'package:fansseathub/model/match_details.dart';
import 'package:hive/hive.dart';
import 'package:image_picker/image_picker.dart';
import 'package:fansseathub/helper/widgets/addingField.dart';
import 'package:fansseathub/helper/widgets/widgets.dart';
import 'package:flutter/material.dart';

class AddNextGame extends StatefulWidget {
  const AddNextGame({super.key});

  @override
  State<AddNextGame> createState() => _AddFirstGameState();
}

class _AddFirstGameState extends State<AddNextGame> {
  final formkey = GlobalKey<FormState>();
  final TextEditingController team1controller = TextEditingController();
  final TextEditingController team2controller = TextEditingController();
  final TextEditingController timecontroller = TextEditingController();
  final TextEditingController datecontroller = TextEditingController();
  final TextEditingController categorycontroller = TextEditingController();
  final TextEditingController typecontroller = TextEditingController();
  final TextEditingController gamenocontroller = TextEditingController();
  final TextEditingController stadiumcontroller = TextEditingController();
  File? _selectedImageteam1;
  File? _selectedImageteam2;
  late Box matchdetailsbox;
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    matchdetailsbox = Hive.box('matchdetiles');
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      body: SingleChildScrollView(
        child: SafeArea(
            child: Padding(
          padding: const EdgeInsets.only(top: 10, left: 14, right: 14),
          child: Form(
            key: formkey,
            child: Column(
              children: [
                Row(
                  children: [
                    InkWell(
                      onTap: () {
                        Navigator.pop(context);
                      },
                      child: Icon(
                        Icons.arrow_back,
                        color: Colors.white,
                      ),
                    ),
                    Spacer(),
                    HeadingWhite()
                  ],
                ),
                SizedBox(
                  height: 20,
                ),
                Row(
                  children: [
                    Text(
                      'Add next game details',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 35,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ],
                ),
                SizedBox(
                  height: 20,
                ),
                GameAddingField(
                  team1Controller: team1controller,
                  team2Controller: team2controller,
                  dateController: datecontroller,
                  timeController: timecontroller,
                  categoryController: categorycontroller,
                  gamenoController: gamenocontroller,
                  typeController: typecontroller,
                  stadiumController: stadiumcontroller,
                  imageSelectedteam1: _selectedImageteam1,
                  imageSelectedteam2: _selectedImageteam2,
                  onTap1: ()async{
                     File? pickimage = await pickImageFromGallery();
                    setState(() {
                      _selectedImageteam1 = pickimage;
                      // _selectedImageteam2 = pickimage;
                    });
                  },
                       onTap2: ()async{
                     File? pickimage = await pickImageFromGallery();
                    setState(() {
                      // _selectedImageteam1 = pickimage;
                      _selectedImageteam2 = pickimage;
                    });
                  },
                  
                ),
                SizedBox(
                  height: 20,
                ),
                SizedBox(
                  child: ElevatedButton(
                      onPressed: () {
                        submit();

                         if (formkey.currentState!.validate()) {

                          


                         }
                        //Navigator.pop(context);
                      },
                      style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.white,
                          shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(50))),
                      child: Text(
                        '     Submit    ',
                        style: TextStyle(
                          fontSize: 20,
                          color: Colors.black,
                        ),
                      )),
                )
              ],
            ),
          ),
        )),
      ),
    );
  }

  submit() {
   
      if(_selectedImageteam1 == null &&_selectedImageteam2 == null){
        ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              backgroundColor: Colors.red,
              content: Text(
                'You Must select an image',
              style: TextStyle(
                color: Colors.white,
              ),
            ),
          )
        );
        return;
      }else{
        saveDetails();
      }
    
  }
   Future<File?>pickImageFromGallery()async{
    final pickedimage = 
         await ImagePicker().pickImage(source: ImageSource.gallery);
         if(pickedimage!=null){
          return File(pickedimage.path);
         }
         return null;
  }

  void saveDetails(){
    final isValid = formkey.currentState?.validate();
    if (isValid != null && isValid){
      formkey.currentState?.save();
      matchdetailsbox.add(MatchDetails(
        team1:team1controller.text ,
         team2: team2controller.text,
          imagePath1: _selectedImageteam1.toString(),
           imagePath2: _selectedImageteam2.toString(),
            time: timecontroller.toString() ,
             date: datecontroller.toString(),
              category: categorycontroller.text,
               gameno: gamenocontroller.text.toString(),
                typeofgame: typecontroller.text,
                 stadium: stadiumcontroller.text
                 )
                );

    }
   }
}
void saveDetails(){
    final isValid = formkey.currentState?.validate();
    if (isValid != null && isValid){
      formkey.currentState?.save();
      matchdetailsbox.add(MatchDetails(
        id: id,
        team1:team1controller.text ,
         team2: team2controller.text,
          imagePath1: _selectedImageteam1.toString(),
           imagePath2: _selectedImageteam2.toString(),
            time: timecontroller.toString() ,
             date: datecontroller.toString(),
              category: categorycontroller.text,
               gameno: gamenocontroller.text.toString(),
                typeofgame: typecontroller.text,
                 stadium: stadiumcontroller.text
                 )
                );

    }
   }
